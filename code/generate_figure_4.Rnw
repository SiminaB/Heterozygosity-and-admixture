\documentclass{article}

\begin{document}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(
fig.path='../figs/'
)
@

Load the necessary libraries:
<<>>=
library(ggplot2)
library(MCMCpack)
library(gridExtra)
library(Matrix)
@

<<>>=
##function which calculates heterozygosity for admixture for given gamma 
##and allele frequencies
Hadm <- function(gamma, P)
{
  K <- length(gamma)
  J <- nrow(P)
  
  pBar <- rep(0, J)
  
  for(k in 1:K)
  {
    pBar <- pBar + gamma[k]*P[,k]
  }
  
  ##pBar <- rowSums(gamma*P) ##.Internal(rowSums(gamma*P, J, K, na.rm=TRUE))
  1 - sum(pBar^2)
}
@

\section{Do simulations!}

Note that the code below only does 1,000 simulations, as opposed to 50,000, as in the paper. Performing 50,000 simulations would probably overwhelm local computing resources and can be done via parallel implementation. As a result, the figure is not quite as smooth as the one in the paper, though the general trend is the same.
Increasing the number of simulations would increase the smoothness.

<<>>=
set.seed(231883)

nrSims <- 1000

##save fraction of times Hadm is bigger than H1, ..., HK
HadmBiggerMax <- expand.grid(J = 2:30, K = 2:5, HadmBigger=0)

alphaBar <- 1

dim(HadmBiggerMax)

for(i in 1:nrow(HadmBiggerMax))
{
  if(i %% 5 == 0)
  {
    print(c(i, date()))
  }
  
  J <- HadmBiggerMax[i, 1]
  K <- HadmBiggerMax[i, 2]
  
  for(sim in 1:nrSims)
  { 
    ##generate some allele frequencies
    P <- t.default(rdirichlet(K, rep(alphaBar, J)))

    ##generate some admixture fractions
    gamma <- rdirichlet(1, rep(alphaBar, K))

    ##calculate H1, ..., HK
    Hfounders <- rep(NA, K)
    for(k in 1:K)
    {
      ##e.k <- rep(0, K)
      ##e.k[k] <- 1
      Hfounders[k] <- 1-sum(P[,k]^2)##Hadm(gamma=e.k, P=P)
    }
    ##calculate Hadm
    Hadm.curr <- Hadm(gamma=gamma, P=P)

    if(sum(Hadm.curr > Hfounders) == K)
    {
      HadmBiggerMax[i, 3] <- HadmBiggerMax[i, 3] + 1
    }
  }
}

range(HadmBiggerMax[, 3])
HadmBiggerMax[, 3] <- HadmBiggerMax[, 3]/nrSims
range(HadmBiggerMax[, 3])

HadmBiggerMax$K <- as.factor(HadmBiggerMax$K)
colnames(HadmBiggerMax)[3] <- "Fraction"
@

\section{Make plot}

<<Fig4>>=
ggplot(HadmBiggerMax, aes(x=J, y=Fraction, by=K, color=K, shape=K)) + 
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks=c(2,5,10,15,20,25,30),
                     labels=c(2,"",10,"",20,"",30),
                     lim=c(0,30)) +
  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73", "#CC79A7")) +
  ylab(expression("Fraction of runs for which " * H[adm] * " > max{" * H[1] * ", ..., " * H[K] * "}"))  +
  ylim(c(0,1)) +
  theme(axis.line = element_line(colour = "black"),
        plot.title = element_text(size = 16, hjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        legend.key = element_blank(),
        # legend.position=c(0.6,0.6),
        legend.title = element_text(size=18),
        legend.text = element_text(size=16),
        legend.text.align = 0,
        legend.box.background = element_rect(colour = "black"),
        axis.title = element_text(size=18),
        axis.text = element_text(size=16)) 

